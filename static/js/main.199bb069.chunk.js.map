{"version":3,"sources":["components/NavBar.tsx","components/SectionHeader.tsx","components/Education.tsx","components/Publications.tsx","components/Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBar","className","href","Component","SectionHeader","props","title","items","date","course","provider","Education","educationItems","map","index","key","journal","authors","Publications","publicationItems","Main","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.199bb069.chunk.js","sourcesContent":["import React, { Component, Fragment } from 'react'\nclass NavBar extends Component {\n  render() {\n    return (\n      <Fragment>\n        <h1 className=\"f4 bold mw6\">Marie-anne Mawhin</h1>\n        <ul className=\"list pl0 ml0 mw6\">\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Contact\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Skills\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Languages\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Interests\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Experience\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Education\n            </a>\n          </li>\n          <li className=\"pv3 bb b--washed-blue\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Projects\n            </a>\n          </li>\n          <li className=\"pv3\">\n            <a className=\"f5 fw5 link dim washed-blue bg-navy\" href=\"#0\">\n              Achievements\n            </a>\n          </li>\n        </ul>\n      </Fragment>\n    )\n  }\n}\nexport default NavBar\n","import React from 'react'\nconst SectionHeader: React.FC<{ title: string }> = (props: {\n  title: string\n}) => <p className=\"ph5 pv3 f3 f2-m fw6 f1-l navy\">{props.title}</p>\n\nexport default SectionHeader\n","import React, { Fragment } from 'react'\nimport SectionHeader from './SectionHeader'\n\nconst items = [\n  {\n    date: '2020',\n    course: 'Data Science with python (Full track)',\n    provider: 'DataCamp'\n  },\n  {\n    date: '2013 - 2017',\n    course: 'PhD in Cardiovascular Immunology',\n    provider: '  University of Strasbourg I'\n  },\n  {\n    date: '2010',\n    course: 'MSc in Epidemiology',\n    provider: 'University Paris V'\n  },\n  {\n    date: '2009 - 2012',\n    course: 'MSc in Physiopathology',\n    provider: 'University of Strasbourg I'\n  },\n  {\n    date: '2008 - 2009',\n    course: 'BSc in Cellular Biology and Physiology, B level',\n    provider: 'Leeds University (ERASMUS)'\n  },\n  {\n    date: '2006 - 2008',\n    course: 'BSc in Cellular Biology and Physiology',\n    provider: 'University of Strasbourg I'\n  }\n]\n\nconst Education: React.FC = () => {\n  const educationItems = items.map(({ date, course, provider }, index) => (\n    <div key={index} className=\"tc ph4\">\n      <p className=\"f4 f3-m f2-l fw2 black-90 mv3\">{course}</p>\n      <p className=\"f5 f4-m f3-l fw2 black-50 mt0 lh-copy\">\n        <span>{date}</span>&nbsp;<span>{provider}</span>\n      </p>\n    </div>\n  ))\n  return (\n    <Fragment>\n      <SectionHeader title=\"Education\" />\n      {educationItems}\n    </Fragment>\n  )\n}\n\nexport default Education\n","import React, { Fragment } from 'react'\nimport SectionHeader from './SectionHeader'\n\nconst items = [\n  {\n    date: '2020',\n    title:\n      'Protective effect of ApoA1- Milano in a rat model of large vessel occlusion stroke.',\n    journal: 'Stroke.;STROKEAHA119027898',\n    authors: [\n      'C. Ducroux',\n      'J.P. Desilles',\n      'M.A. MAWHIN',\n      'S. Delbosc',\n      'B. Ho-Tin-Noé',\n      'V. Ollivier',\n      'L. Di Meglio',\n      'B. Lapergue',\n      'J.B. Michel',\n      'P. Amarenco.'\n    ]\n  },\n  {\n    date: '2013 - 2017',\n    title:\n      'Glycoprotein VI in securing vascular integrity in inflamed vessels.',\n    journal: 'Res. Pract. Thromb. Haemost. 2, 228–239',\n    authors: [\n      'Y.Boulaftali',\n      'M.A. MAWHIN',\n      'M. Jandrot-Perrus',\n      'B. Ho-Tin-Noé'\n    ]\n  },\n  {\n    date: '2010',\n    title:\n      'Neutrophils recruited by leukotriene B4 induce plaque destabilization during endotoxemia.',\n    journal: 'Cardiovasc. Res.',\n    authors: [\n      'M.A. MAWHIN',\n      'P. Tilly',\n      'G. Zirka',\n      'A.L. Charles',\n      'F. Slimani',\n      'J.L. Vonesh',\n      'J.B. Michel',\n      'M. Back',\n      'X. Norel',\n      'J.E. Fabre'\n    ]\n  },\n  {\n    date: '2009 - 2012',\n    title:\n      'Blocking the receptor EP3 to PGE2 as a way to safely prevent atherothrombosis.',\n    journal: 'Recept. Clin. Investig. 3',\n    authors: []\n  },\n  {\n    date: '2008 - 2009',\n    title:\n      'A rational target to prevent atherothrombosis without inducing bleeding.',\n    journal: 'Prostaglandins Other Lipid Mediat. 121, 4–16'\n  },\n  {\n    date: '2006 - 2008',\n    title:\n      'Dendritic cells differently phagocytose activated or apoptotic blood platelets.',\n    journal: 'J. Thromb. Haemost. 11, 205'\n  }\n]\n\nconst Publications: React.FC = () => {\n  const publicationItems = items.map(({ date, title, journal }, index) => (\n    <div key={index} className=\"tc ph4\">\n      <p className=\"f4 f3-m f2-l fw2 black-90 mv3\">{title}</p>\n      <p className=\"f5 f4-m f3-l fw2 black-50 mt0 lh-copy\">\n        <span>{date}</span>&nbsp;<span>{journal}</span>\n      </p>\n    </div>\n  ))\n  return (\n    <Fragment>\n      <SectionHeader title=\"Publications\" />\n      {publicationItems}\n    </Fragment>\n  )\n}\n\nexport default Publications\n","import React, { Component, Fragment } from 'react'\nimport Education from './Education'\nimport Publications from './Publications'\nclass Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Education />\n        <Publications />\n      </Fragment>\n    )\n  }\n}\n\nexport default Main\n","import React from 'react'\nimport NavBar from './components/NavBar'\nimport Main from './components/Main'\n\nfunction App() {\n  return (\n    <div className=\"App vh-100 avenir\">\n      <div className=\"fl w-third w-30-m w-20-l h-100 pa3 bg-navy washed-blue o-80\">\n        <NavBar />\n      </div>\n      <div className=\"fl w-two-thirds w-70-m w-80-l pa3 h-100 overflow-y-scroll bg-washed-blue\">\n        <Main />\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'tachyons'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}